<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">


	<resultMap id="resultMember" type="Member">
		<id property="userid" column="userid" />
		<result property="userpwd" column="userpwd" />
		<result property="username" column="username" />
		<result property="phone" column="phone" />
		<result property="email" column="email" />
		<result property="state" column="state" />
		<result property="enroll_date" column="enroll_date" />
		<result property="lastmodified" column="lastmodified" />
		<result property="deletedate" column="deletedate" />
	</resultMap>


	<resultMap id="resultNotice" type="Notice">
		<id property="noticeno" column="noticeno" />
		<result property="noticetitle" column="noticetitle" />
		<result property="noticedate" column="noticedate" />
		<result property="noticewriter" column="noticewriter" />
		<result property="noticecontent" column="noticecontent" />
		<result property="noticereadcount" column="noticereadcount" />
		<result property="original_filepath" column="original_filepath" />
		<result property="rename_filepath" column="rename_filepath" />
	</resultMap>


	<resultMap id="resultSuspect" type="Suspect">
		<id property="suspect_no" column="suspect_no" />
		<result property="suspect_name" column="suspect_name" />
		<result property="suspect_account" column="suspect_account" />
		<result property="suspect_phone" column="suspect_phone" />
		<result property="suspect_count" column="suspect_count" />
	</resultMap>



	<!-- 1) 전체회원 조회 -->

	<select id="adminMemberList" parameterType="hashmap"
		resultType="list" resultMap="resultMember">
	<![CDATA[
		select * from (select rownum rnum, userid, userpwd, username, phone, email, state, enroll_date, lastmodified, deletedate from member) where rnum >= #{startRow} and rnum <= #{endRow}
		]]>
	</select>


	<!-- 2) 전체회원 수 -->

	<select id="adminMemberListCount" resultType="_int">
		<![CDATA[select count(*) from member]]>
	</select>


	<!-- 3) 전체회원 조회 Default -->

	<select id="adminMemberSearchDefault" resultType="list"
		resultMap="resultMember">
	<![CDATA[
		select * from member
		]]>
	</select>


	<!-- 4) 회원 검색 전체 -->

	<select id="adminMemberSearchAll" parameterType="string"
		resultType="list" resultMap="resultMember">
	<![CDATA[select * from member where username like  '%' || #{keyword} || '%' or userid like '%' || #{keyword} || '%']]>
	</select>


	<!-- 5) 회원 검색 이름 -->

	<select id="adminMemberSearchName" parameterType="string"
		resultType="list" resultMap="resultMember">
	<![CDATA[select * from member where username like '%' || #{keyword} || '%']]>
	</select>

	<!-- 6) 회원 검색 아이디 -->

	<select id="adminMemberSearchId" parameterType="string"
		resultType="list" resultMap="resultMember">
	<![CDATA[select * from member where userid like '%' || #{keyword} || '%']]>
	</select>

	<!-- 7) 회원 업데이트 삭제 -->
	<update id="adminMemberUpdateDelete" parameterType="string">
		update member
		set
		state = 1 where userid = #{userid}
	</update>

	<!-- 8) 회원 삭제 -->
	<delete id="adminMemberDelete" parameterType="string">
		delete from member
		where
		userid = #{userid}
	</delete>


	<!-- 9) 공지 리스트 -->
	<select id="adminNoticeList" parameterType="hashMap"
		resultType="Notice" resultMap="resultNotice">
		<!-- 전체 -->
		select* from(select rownum rnum, noticeno, noticetitle, noticewriter,
		noticecontent,
		noticereadcount, original_filepath, rename_filepath,
		noticedate
		from notice
		<if test="cg=='all'">
			where
			noticetitle like '%' || #{bar} || '%' or
			noticecontent like '%' || #{bar} || '%'
		</if>
		<if test="cg=='title'">
			where
			noticetitle like '%' || #{bar} || '%'
		</if>
		<if test="cg=='content'">
			where
			noticecontent like '%' || #{bar} || '%'
		</if>
		) where
		<![CDATA[rnum >= #{startRow} and rnum <= #{endRow}]]>
		order by noticeno asc
	</select>


	<!-- 10) 공지 리스트 수 -->
	<select id="adminNoticeListCount" resultType="_int">
		<![CDATA[select count(*) from notice]]>
	</select>

	<!-- 11) 공지 조회 수 -->
	<update id="adminNoticeReadCount" parameterType="_int">
		update notice
		set
		noticereadcount = noticereadcount + 1 where noticeno = #{noticeno}
	</update>


	<!-- 12) 공지 상세보기 -->

	<select id="adminNoticeDetail" parameterType="hashMap"
		resultType="Notice" resultMap="resultNotice">
		select * from notice where noticeno =
		#{noticeno}
	</select>

	<!-- 13) 공지 삭제 -->

	<delete id="adminNoticeDelete" parameterType="string">
		delete from notice
		where
		noticeno = #{noticeno}
	</delete>
	
	
	<!-- 14) 용의자 리스트 -->

	<select id="adminSuspectList" parameterType="hashmap"
		resultType="list" resultMap="resultSuspect">
	<![CDATA[
		select * from (select rownum rnum, suspect_no, suspect_name, suspect_account, suspect_phone from suspect) where rnum >= #{startRow} and rnum <= #{endRow}
		]]>
	</select>


	<!-- 15) 용의자 리스트 수 -->
	<select id="adminSuspectListCount" resultType="_int">
		<![CDATA[select count(*) from suspect]]>
	</select>
	
	
	<!-- 16) 테스트 -->

	<select id="selectMember" parameterType="string"
		resultType="Member">
		<![CDATA[select * from member where userid = #{userid}]]>
	</select>

































	<!-- 조회수 -->



</mapper>
