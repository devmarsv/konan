<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">

	<!-- 테이블의 컬럼명과 vo 클래스의 필드명이 같으면 ResultMap 자동 처리됨. 별도 작성 필요 없음. -->
	<resultMap id="resultMember" type="Member">
		<id property="userid" column="userid" />
		<result property="userpwd" column="userpwd" />
		<result property="username" column="username" />
		<result property="phone" column="phone" />
		<result property="email" column="email" />
		<result property="state" column="state" />
		<result property="enroll_date" column="enroll_date" />
		<result property="lastmodified" column="lastmodified" />
		<result property="deletedate" column="deletedate" />
	</resultMap>
	
	
	<resultMap id="resultNotice" type="Notice">
		<id property="noticeno" column="noticeno" />
		<result property="noticetitle" column="noticetitle" />
		<result property="noticedate" column="noticedate" />
		<result property="noticewriter" column="noticewriter" />
		<result property="noticecontent" column="noticecontent" />
		<result property="noticereadcount" column="noticereadcount" />
		<result property="original_filepath" column="original_filepath" />
		<result property="rename_filepath" column="rename_filepath" />
	</resultMap>


	<select id="selectList" parameterType="hashmap"
		resultType="list" resultMap="resultMember">
	<![CDATA[
		select * from (select rownum rnum, userid, userpwd, username, phone, email, state, enroll_date, lastmodified, deletedate from member) where rnum >= #{startRow} and rnum <= #{endRow} order by rnum asc
	</select>

							
	<select id="selectSearchAll" parameterType="string"
		resultType="list" resultMap="resultMember">
	<![CDATA[select * from member where username like  '%' || #{keyword} || '%' or userid like '%' || #{keyword} || '%']]>
	</select>

	<select id="selectSearchName" parameterType="string"
		resultType="list" resultMap="resultMember">
	<![CDATA[select * from member where username like '%' || #{keyword} || '%']]>
	</select>

	<select id="selectSearchId" parameterType="string"
		resultType="list" resultMap="resultMember">
	<![CDATA[select * from member where userid like '%' || #{keyword} || '%']]>
	</select>

	<select id="selectMember" parameterType="string" resultType="Member" >
		<![CDATA[select * from member where userid = #{userid}]]>
	</select>




	<insert id="insertMember" parameterType="Member"
		useGeneratedKeys="true">
		insert into member values(#{userid}, #{userpwd}, #{username}, #{phone},
		#{email}, -1, sysdate, sysdate, null)
	</insert>


	<delete id="deleteMember" parameterType="string">
		delete from member where
		userid = #{userid}
	</delete>

	<update id="updateDeleteMember" parameterType="string">
		update member set
		state = 1 where userid = #{userid}
	</update>


	<update id="updateMember" parameterType="Member">
		update member set
		username = #{username}, userpwd = #{userpwd}, age = #{age}, phone =
		#{phone}, email = #{email}, hobby = #{hobby}, etc = #{etc},
		lastmodified = sysdate where userid = #{userid}
	</update>

	<select id="getListCount" resultType="_int">
		<![CDATA[select count(*) from member]]>
	</select>

	<select id="selectSearchDefault" resultType="list" resultMap="resultMember">
	<![CDATA[
		select * from member
		]]>
	</select>
	
		<select id="noticeListCount" resultType="_int">
		<![CDATA[select count(*) from notice]]>
	</select>
	
	
	<select id="selectNoticeList" parameterType="hashMap" resultType="Notice" resultMap="resultNotice">
		<!-- 전체 -->
		select* from(select rownum rnum, noticeno, noticetitle, noticewriter, noticecontent,
                     noticereadcount, original_filepath, rename_filepath, noticedate 
                     from notice 
						<if test="cg=='all'">
							where
							noticetitle like '%' || #{bar} || '%' or
							noticecontent like '%' || #{bar} || '%'
						</if>
						<if test="cg=='title'">
						 	where
							noticetitle like '%' || #{bar} || '%'
						</if>
						<if test="cg=='content'">
							where
							noticecontent like '%' || #{bar} || '%'
						</if>
		) where
		<![CDATA[rnum >= #{startRow} and rnum <= #{endRow}]]>
		order by noticeno asc
	</select>
	
	
	<select id="selectNotice" parameterType="hashMap"
		resultType="Notice" resultMap="resultNotice">
		select * from notice where noticeno =
		#{noticeno}
	</select>
	
		<!-- 조회수 -->
	<update id="addNoticeReadCount" parameterType="_int">
		update notice set
		noticereadcount = noticereadcount + 1 where noticeno = #{noticeno}
	</update>
	

</mapper>
