<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">

	<!-- Member -->
	<resultMap id="resultMember" type="Member">
		<id property="userid" column="userid" />
		<result property="userpwd" column="userpwd" />
		<result property="username" column="username" />
		<result property="phone" column="phone" />
		<result property="email" column="email" />
		<result property="state" column="state" />
		<result property="enroll_date" column="enroll_date" />
		<result property="lastmodified" column="lastmodified" />
		<result property="deletedate" column="deletedate" />
	</resultMap>

	<!-- Notice -->
	<resultMap id="resultNotice" type="Notice">
		<id property="noticeno" column="noticeno" />
		<result property="noticetitle" column="noticetitle" />
		<result property="noticedate" column="noticedate" />
		<result property="noticewriter" column="noticewriter" />
		<result property="noticecontent" column="noticecontent" />
		<result property="noticereadcount" column="noticereadcount" />
		<result property="original_filepath" column="original_filepath" />
		<result property="rename_filepath" column="rename_filepath" />
	</resultMap>

	<!-- Suspect -->
	<resultMap id="resultSuspect" type="Suspect">
		<id property="suspect_no" column="suspect_no" />
		<result property="suspect_name" column="suspect_name" />
		<result property="suspect_bank" column="suspect_bank" />
		<result property="suspect_account" column="suspect_account" />
		<result property="suspect_phone" column="suspect_phone" />
		<result property="suspect_count" column="suspect_count" />
		<result property="report_date" column="report_date" />
	</resultMap>


	<!-- Board -->
	<resultMap id="resultBoard" type="Board">
		<id property="board_num" column="board_num" />
		<result property="board_writer" column="board_writer" />
		<result property="board_title" column="board_title" />
		<result property="board_content" column="board_content" />
		<result property="board_original_filename"
			column="board_original_filename" />
		<result property="board_rename_filename"
			column="board_rename_filename" />
		<result property="board_readcount" column="board_readcount" />
		<result property="board_date" column="board_date" />
		<result property="board_category" column="board_category" />
	</resultMap>

	<!-- Reply -->
	<resultMap id="resultBoardReply" type="Reply">
		<id property="board_reply_num" column="board_reply_num" />
		<result property="board_reply_content"
			column="board_reply_content" />
		<result property="board_reply_date" column="board_reply_date" />
		<result property="board_num" column="board_num" />
		<result property="userid" column="userid" />
	</resultMap>


	<!-- Victim -->
	<resultMap id="resultVictim" type="Victim">
		<id property="board_num" column="board_num" />
		<result property="board_writer" column="board_writer" />
		<result property="board_suspectno" column="board_suspectno" />
		<result property="board_category" column="board_category" />
		<result property="board_title" column="board_title" />
		<result property="board_content" column="board_content" />
		<result property="board_original_filename"
			column="board_original_filename" />
		<result property="board_rename_filename"
			column="board_rename_filename" />
		<result property="board_readcount" column="board_readcount" />
		<result property="board_date" column="board_date" />
	</resultMap>



	<!-- 1) 전체회원 조회 -->

	<select id="adminMemberList" parameterType="hashmap"
		resultType="list" resultMap="resultMember">
	<![CDATA[
		select * from (select rownum rnum, userid, userpwd, username, phone, email, state, enroll_date, lastmodified, deletedate from member) where rnum >= #{startRow} and rnum <= #{endRow}
		]]>
	</select>


	<!-- 2) 전체회원 수 -->

	<select id="adminMemberListCount" resultType="_int">
		<![CDATA[select count(*) from member]]>
	</select>


	<!-- 3) 전체회원 조회 Default -->

	<select id="adminMemberSearchDefault" resultType="list"
		resultMap="resultMember">
	<![CDATA[
		select * from member
		]]>
	</select>


	<!-- 4) 회원 수정 시 ajax 회원 선택 -->

	<select id="adminMemberSelect" parameterType="string"
		resultType="Member">
		<![CDATA[select * from member where userid = #{userid}]]>
	</select>


	<!-- 5) 전체회원 조회 Default -->

	<update id="adminMemberUpdateName" parameterType="Member">
     <![CDATA[update member
		set
		username = #{username} where userid = #{userid}]]>
	</update>


	<!-- 6) 전체회원 조회 Default -->

	<update id="adminMemberUpdatePhone" parameterType="Member">
     <![CDATA[update member
		set
		phone = #{phone} where userid = #{userid}]]>

	</update>


	<!-- 7) 전체회원 조회 Default -->
	<update id="adminMemberUpdateState" parameterType="Member">
     <![CDATA[update member
		set
		state = #{state} where userid = #{userid}]]>

	</update>



	<!-- 8) 회원 검색 전체 -->

	<select id="adminMemberSearchAll" parameterType="string"
		resultType="list" resultMap="resultMember">
	<![CDATA[select * from member where username like  '%' || #{keyword} || '%' or userid like '%' || #{keyword} || '%']]>
	</select>


	<!-- 9) 회원 검색 이름 -->

	<select id="adminMemberSearchName" parameterType="string"
		resultType="list" resultMap="resultMember">
	<![CDATA[select * from member where username like '%' || #{keyword} || '%']]>
	</select>

	<!-- 10) 회원 검색 아이디 -->

	<select id="adminMemberSearchId" parameterType="string"
		resultType="list" resultMap="resultMember">
	<![CDATA[select * from member where userid like '%' || #{keyword} || '%']]>
	</select>

	<!-- 11) 회원 업데이트 삭제 -->
	<update id="adminMemberUpdateDelete" parameterType="string">
		update member
		set
		state = 1 where userid = #{userid}
	</update>

	<!-- 12) 회원 삭제 -->
	<delete id="adminMemberDelete" parameterType="string">
		delete from member
		where
		userid = #{userid}
	</delete>


	<!-- 13) 공지 리스트 -->
	<select id="adminNoticeList" parameterType="hashMap"
		resultType="Notice" resultMap="resultNotice">
		<!-- 전체 -->
		select* from(select rownum rnum, noticeno, noticetitle, noticewriter,
		noticecontent,
		noticereadcount, original_filepath, rename_filepath,
		noticedate
		from notice
		<if test="cg=='all'">
			where
			noticetitle like '%' || #{bar} || '%' or
			noticecontent like '%' || #{bar} || '%'
		</if>
		<if test="cg=='title'">
			where
			noticetitle like '%' || #{bar} || '%'
		</if>
		<if test="cg=='content'">
			where
			noticecontent like '%' || #{bar} || '%'
		</if>
		) where
		<![CDATA[rnum >= #{startRow} and rnum <= #{endRow}]]>
		order by noticeno asc
	</select>


	<!-- 14) 공지 리스트 수 -->
	<select id="adminNoticeListCount" resultType="_int">
		<![CDATA[select count(*) from notice]]>
	</select>

	<!-- 15) 공지 조회 수 -->
	<update id="adminNoticeReadCount" parameterType="_int">
		update notice
		set
		noticereadcount = noticereadcount + 1 where noticeno = #{noticeno}
	</update>


	<!-- 16) 공지 상세보기 -->

	<select id="adminNoticeDetail" parameterType="hashMap"
		resultType="Notice" resultMap="resultNotice">
		select * from notice where noticeno =
		#{noticeno}
	</select>

	<!-- 17) 공지 삭제 -->

	<delete id="adminNoticeDelete" parameterType="_int">
		delete from notice
		where
		noticeno = #{noticeno}
	</delete>


	<!-- 18) 피의자 리스트 -->


	<select id="adminSuspectList" parameterType="hashMap"
		resultType="Suspect" resultMap="resultSuspect">
		<!-- 전체 -->
		select* from(select rownum rnum, suspect_no, suspect_name,
		suspect_account,
		suspect_phone,
		suspect_count, suspect_bank, report_date
		from suspect
		<if test="cg=='all'">
			where
			suspect_name like '%' || #{bar} || '%' or
			suspect_phone like '%' || #{bar} || '%' or
			suspect_bank like '%' ||
			#{bar} || '%' or
			suspect_account like '%' || #{bar} || '%'
		</if>
		<if test="cg=='name'">
			where
			suspect_name like '%' || #{bar} || '%'
		</if>
		<if test="cg=='phone'">
			where
			suspect_phone like '%' || #{bar} || '%'
		</if>
		<if test="cg=='bank'">
			where
			suspect_bank like '%' || #{bar} || '%'
		</if>
		<if test="cg=='account'">
			where
			suspect_account like '%' || #{bar} || '%'
		</if>
		) where
		<![CDATA[rnum >= #{startRow} and rnum <= #{endRow}]]>
		order by suspect_no asc
	</select>


	<!-- 19) 피의자 리스트 수 -->
	<select id="adminSuspectListCount" resultType="_int">
		<![CDATA[select count(*) from suspect]]>
	</select>



	<!-- 20) 피의자 ajax 수정 시 선택 -->

	<select id="adminSuspectSelect" parameterType="_int"
		resultType="Suspect">
		<![CDATA[select * from suspect where suspect_no = #{suspect_no}]]>
	</select>




	<!-- 21) 피의자 ajax 수정 이름 승인 -->
	<update id="adminSuspectUpdateName" parameterType="Suspect">
<![CDATA[update suspect
		set
		suspect_name = #{suspect_name} where suspect_no = #{suspect_no}]]>

	</update>


	<!-- 22) 피의자 ajax 수정 계좌 승인 -->
	<update id="adminSuspectUpdateAccount" parameterType="Suspect">
<![CDATA[update suspect
		set
		suspect_account = #{suspect_account} where suspect_no = #{suspect_no}]]>

	</update>

	<!-- 23) 피의자 ajax 수정 번호 승인 -->
	<update id="adminSuspectUpdatePhone" parameterType="Suspect">
<![CDATA[update suspect
		set
		suspect_phone = #{suspect_phone} where suspect_no = #{suspect_no}]]>

	</update>


	<!-- 24) 피의자 ajax 수정 횟수 승인 -->
	<update id="adminSuspectUpdateBank" parameterType="Suspect">
<![CDATA[update suspect
		set
		suspect_bank = #{suspect_bank} where suspect_no = #{suspect_no}]]>
	</update>

	<!-- 24) 피의자 ajax 수정 날짜 승인 -->
	<update id="adminSuspectUpdateDate" parameterType="Suspect">
<![CDATA[update suspect
		set
		report_date = #{report_date} where suspect_no = #{suspect_no}]]>
	</update>


	<!-- 25) 피의자 ajax 수정 횟수 승인 -->
	<update id="adminSuspectUpdateCount" parameterType="Suspect">
<![CDATA[update suspect
		set
		suspect_count = #{suspect_count} where suspect_no = #{suspect_no}]]>
	</update>



	<!-- 26) 피의자 삭제 -->
	<delete id="adminSuspectDelete" parameterType="_int">
		delete from
		suspect
		where
		suspect_no = #{suspect_no}
	</delete>



	<!-- 26) 피의자 검색 Default -->
	<select id="adminSuspectSearchDefault" resultType="list"
		resultMap="resultSuspect">
	<![CDATA[
		select * from suspect
		]]>
	</select>

	<!-- 27) 피의자 검색 전체 -->
	<select id="adminSuspectSearchAll" parameterType="string"
		resultType="list" resultMap="resultSuspect">
	<![CDATA[select * from suspect where suspect_name like  '%' || #{keyword} || '%' or suspect_account like '%' || #{keyword} || '%' or suspect_phone like '%' || #{keyword} || '%' or suspect_bank like '%' || #{keyword} || '%' or report_date like '%' || #{keyword} || '%']]>
	</select>


	<!-- 28) 피의자 검색 이름 -->
	<select id="adminSuspectSearchName" parameterType="string"
		resultType="list" resultMap="resultSuspect">
	<![CDATA[select * from suspect where suspect_name like '%' || #{keyword} || '%']]>
	</select>


	<!-- 29) 피의자 검색 번호 -->
	<select id="adminSuspectSearchPhone" parameterType="string"
		resultType="list" resultMap="resultSuspect">
	<![CDATA[select * from suspect where suspect_phone like '%' || #{keyword} || '%']]>
	</select>

	<!-- 28) 피의자 검색 은행 -->
	<select id="adminSuspectSearchBank" parameterType="string"
		resultType="list" resultMap="resultSuspect">
	<![CDATA[select * from suspect where suspect_bank like '%' || #{keyword} || '%']]>
	</select>


	<!-- 28) 피의자 검색 계좌 -->
	<select id="adminSuspectSearchAccount" parameterType="string"
		resultType="list" resultMap="resultSuspect">
	<![CDATA[select * from suspect where suspect_account like '%' || #{keyword} || '%']]>
	</select>




	<!-- 30) 자유게시판 리스트 수 -->
	<select id="adminFreeListCount" parameterType="hashMap"
		resultType="_int">
		select count(*) from (select rownum rnum, board_num, board_writer,
		board_title,
		board_content, board_original_filename,
		board_rename_filename,
		board_readcount, board_date, board_category
		from
		board1
		<if test="cg=='all'">
			where
			board_title like '%' || #{bar} || '%' or
			board_content like '%' || #{bar} || '%'
		</if>
		<if test="cg=='title'">
			where
			board_title like '%' || #{bar} || '%'
		</if>
		<if test="cg=='content'">
			where
			board_content like '%' || #{bar} || '%'
		</if>
		)
	</select>

	<!-- 31) 자유게시판 리스트 -->
	<select id="adminFreeList" parameterType="hashMap"
		resultType="Board" resultMap="resultBoard">
		<!-- 전체 -->
		select * from(select rownum rnum, board_num, board_writer,
		board_title,
		board_content, board_original_filename,
		board_rename_filename,
		board_readcount, board_date, board_category
		from
		board1
		<if test="cg=='all'">
			where
			board_title like '%' || #{bar} || '%' or
			board_content like '%' || #{bar} || '%'
		</if>
		<if test="cg=='title'">
			where
			board_title like '%' || #{bar} || '%'
		</if>
		<if test="cg=='content'">
			where
			board_content like '%' || #{bar} || '%'
		</if>
		)where
		<![CDATA[rnum >= #{startRow} and rnum <= #{endRow}]]>
		order by board_num asc
	</select>


	<!-- 32) 자유게시판 조회수 -->
	<update id="adminFreeReadCount" parameterType="_int">
		update board1 set
		board_readcount = board_readcount + 1 where board_num = #{board_num}
	</update>

	<!-- 33) 자유게시판 상세보기 -->
	<select id="adminFreeDetail" parameterType="hashMap"
		resultType="Board" resultMap="resultBoard">
		select * from board1 where board_num =
		#{board_num}
	</select>


	<!-- 34) 자유게시판 글쓰기 -->
	<insert id="adminFreeInsert" parameterType="Board">
		insert into board1
		values((select max(BOARD_NUM) from board1) + 1,
		#{board_writer}, #{board_title}, #{board_content}
		<if
			test="board_original_filename == null or board_original_filename == ''">
			,default, default
		</if>
		<if
			test="board_original_filename != null and board_original_filename !=''">
			,#{board_original_filename}, #{board_rename_filename}
		</if>
		,default, default, '자유')
	</insert>


	<!-- 35) 자유게시판 댓글 글쓰기 -->
	<insert id="adminFreeReplyInsert" parameterType="Reply">
		insert into
		board_reply
		values((select max(board_reply_num) from board_reply) + 1,
		#{board_reply_content}, default, #{board_num}, #{userid})
	</insert>

	<!-- 36) 자유게시판 댓글 선택 -->
	<select id="adminFreeReplySelect" resultType="Reply"
		resultMap="resultBoardReply">
		select * from board_reply where board_num = #{board_num}
		order by board_reply_num desc
	</select>

	<!-- 37) 자유게시판 삭제 -->
	<delete id="adminFreeDelete" parameterType="_int">
		delete from board1
		where
		board_num = #{board_num}
	</delete>


	<!-- 38) 피해게시판 수 -->
	<select id="adminVictimListCount" parameterType="hashMap"
		resultType="_int">
		select count(*)from(select rownum rnum, board_num, board_writer,
		board_suspectno,
		board_category, board_title, board_content,
		board_original_filename,
		board_rename_filename,
		board_readcount,
		board_date
		from board2
		<if test="cg=='all'">
			where
			board_title like '%' || #{bar} || '%' or
			board_content like '%' || #{bar} || '%'
		</if>
		<if test="cg=='title'">
			where
			board_title like '%' || #{bar} || '%'
		</if>
		<if test="cg=='content'">
			where
			board_content like '%' || #{bar} || '%'
		</if>
		)
	</select>

	<!-- 39) 피해게시판 리스트 -->
	<select id="adminVictimList" parameterType="hashMap"
		resultType="Victim" resultMap="resultVictim">
		<!-- 전체 -->
		select* from(select rownum rnum, board_num, board_writer,
		board_suspectno,
		board_category, board_title, board_content,
		board_original_filename,
		board_rename_filename, board_readcount,
		board_date
		from board2
		<if test="cg=='all'">
			where
			board_title like '%' || #{bar} || '%' or
			board_content like '%' || #{bar} || '%' or
			board_category like '%' ||
			#{bar} || '%' or
			board_writer like '%' || #{bar} || '%'

		</if>
		<if test="cg=='title'">
			where
			board_title like '%' || #{bar} || '%'
		</if>
		<if test="cg=='content'">
			where
			board_content like '%' || #{bar} || '%'
		</if>
		<if test="cg=='category'">
			where
			board_category like '%' || #{bar} || '%'
		</if>
		) where
		<![CDATA[rnum >= #{startRow} and rnum <= #{endRow}]]>
		order by board_num asc
	</select>


	<!-- 40) 피해게시판 조회수 -->
	<update id="adminVictimReadCount" parameterType="_int">
		update board2
		set
		board_readcount = board_readcount + 1 where board_num =
		#{board_num}
	</update>


	<!-- 41) 피해게시판 상세보기 -->
	<select id="adminVictimDetail" parameterType="hashMap"
		resultType="Victim" resultMap="resultVictim">
		select * from board2 where board_num =
		#{board_num}
	</select>


	<!-- 42) 피해게시판 글쓰기 -->
	<insert id="adminVictimInsert" parameterType="Victim">
		insert into board2
		values ((select max(board_num) from board2) + 1, #{board_writer},
		#{board_suspectno} , #{board_category},
		#{board_title},
		#{board_content},
		NULL, NULL, DEFAULT, DEFAULT)
	</insert>


	<!-- 43) 피해게시판 삭제 -->
	<delete id="adminVictimDelete" parameterType="_int">
		delete from board2
		where
		board_num = #{board_num}
	</delete>


	<!-- 44) 피해게시판 등록시 용의자 중복확인 -->
	<select id="adminSuspectDuplicate" parameterType="Suspect"
		resultType="Suspect">
		<![CDATA[
		select * from suspect where (suspect_name = #{suspect_name} and suspect_phone = #{suspect_phone}) or (suspect_name = #{suspect_name} and suspect_account = #{suspect_account})]]>
	</select>


	<!-- 45) 피해게시판 등록시 피의자 중복일 경우 누적 증가 -->
	<update id="adminSuspectDuplicateUpdate" parameterType="_int">
		<![CDATA[
		update suspect set suspect_count = suspect_count + 1 where suspect_no = #{suspect_no}]]>
	</update>



	<!-- 46) 피해게시판 등록시 피의자 중복이 아닐 경우 새 데이터 추가 -->
	<insert id="adminSuspectDuplicateNotInsert"
		parameterType="Suspect">
		<![CDATA[
		insert into suspect
        values ((select max(suspect_no) from suspect) + 1, #{suspect_name}, #{suspect_bank}, #{suspect_account}, #{suspect_phone}, 0, sysdate)]]>
	</insert>

</mapper>
