<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">


	<resultMap id="resultMember" type="Member">
		<id property="userid" column="userid" />
		<result property="userpwd" column="userpwd" />
		<result property="username" column="username" />
		<result property="phone" column="phone" />
		<result property="email" column="email" />
		<result property="state" column="state" />
		<result property="enroll_date" column="enroll_date" />
		<result property="lastmodified" column="lastmodified" />
		<result property="deletedate" column="deletedate" />
	</resultMap>


	<resultMap id="resultNotice" type="Notice">
		<id property="noticeno" column="noticeno" />
		<result property="noticetitle" column="noticetitle" />
		<result property="noticedate" column="noticedate" />
		<result property="noticewriter" column="noticewriter" />
		<result property="noticecontent" column="noticecontent" />
		<result property="noticereadcount" column="noticereadcount" />
		<result property="original_filepath" column="original_filepath" />
		<result property="rename_filepath" column="rename_filepath" />
	</resultMap>


	<resultMap id="resultSuspect" type="Suspect">
		<id property="suspect_no" column="suspect_no" />
		<result property="suspect_name" column="suspect_name" />
		<result property="suspect_account" column="suspect_account" />
		<result property="suspect_phone" column="suspect_phone" />
		<result property="suspect_count" column="suspect_count" />
	</resultMap>



    <!-- 1) 전체회원 조회 -->
    <select id="adminSelectList" parameterType="hashmap" resultType="list" resultMap="resultMember">
	<![CDATA[
		select * from (select rownum rnum, userid, userpwd, username, phone, email, state, enroll_date, lastmodified, deletedate from member) where rnum >= #{startRow} and rnum <= #{endRow}
		]]>
	</select>
	
	
	<!-- 2) 전체회원 수 -->
	<select id="adminListCount" resultType="_int">
		<![CDATA[select count(*) from member]]>
	</select>

	

							
	<select id="selectSearchAll" parameterType="string"
		resultType="list" resultMap="resultMember">
	<![CDATA[select * from member where username like  '%' || #{keyword} || '%' or userid like '%' || #{keyword} || '%']]>
	</select>


	<select id="adminMemberSearchDefault" resultType="list"
		resultMap="resultMember">
	<![CDATA[
		select * from member
		]]>
	</select>


	<select id="selectSearchName" parameterType="string"
		resultType="list" resultMap="resultMember">
	<![CDATA[select * from member where username like '%' || #{keyword} || '%']]>
	</select>




	<select id="selectSearchId" parameterType="string"
		resultType="list" resultMap="resultMember">
	<![CDATA[select * from member where userid like '%' || #{keyword} || '%']]>
	</select>

	<select id="selectMember" parameterType="string"
		resultType="Member">
		<![CDATA[select * from member where userid = #{userid}]]>
	</select>




	<insert id="insertMember" parameterType="Member"
		useGeneratedKeys="true">
		insert into member values(#{userid}, #{userpwd},
		#{username}, #{phone},
		#{email}, -1, sysdate, sysdate, null)
	</insert>


	<delete id="deleteMember" parameterType="string">
		delete from member where
		userid = #{userid}
	</delete>

	<update id="updateDeleteMember" parameterType="string">
		update member set
		state = 1 where userid = #{userid}
	</update>


	<update id="updateMember" parameterType="Member">
		update member set
		username = #{username}, userpwd = #{userpwd}, age = #{age}, phone =
		#{phone}, email = #{email}, hobby = #{hobby}, etc = #{etc},
		lastmodified = sysdate where userid = #{userid}
	</update>

	<select id="getListCount" resultType="_int">
		<![CDATA[select count(*) from member]]>
	</select>



	<select id="adminNoticeListCount" resultType="_int">
		<![CDATA[select count(*) from notice]]>
	</select>


	<select id="selectNoticeList" parameterType="hashMap"
		resultType="Notice" resultMap="resultNotice">
		<!-- 전체 -->
		select* from(select rownum rnum, noticeno, noticetitle, noticewriter,
		noticecontent,
		noticereadcount, original_filepath, rename_filepath, noticedate
		from notice
		<if test="cg=='all'">
			where
			noticetitle like '%' || #{bar} || '%' or
			noticecontent like '%' || #{bar} || '%'
		</if>
		<if test="cg=='title'">
			where
			noticetitle like '%' || #{bar} || '%'
		</if>
		<if test="cg=='content'">
			where
			noticecontent like '%' || #{bar} || '%'
		</if>
		) where
		<![CDATA[rnum >= #{startRow} and rnum <= #{endRow}]]>
		order by noticeno asc
	</select>


	<select id="selectNotice" parameterType="hashMap"
		resultType="Notice" resultMap="resultNotice">
		select * from notice where noticeno =
		#{noticeno}
	</select>

	<!-- 조회수 -->
	<update id="addNoticeReadCount" parameterType="_int">
		update notice set
		noticereadcount = noticereadcount + 1 where noticeno = #{noticeno}
	</update>



</mapper>
